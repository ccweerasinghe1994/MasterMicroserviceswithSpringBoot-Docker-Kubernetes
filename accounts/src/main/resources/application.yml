server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:"prod"}
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/accountsdb}
    username: root
    password: ${MYSQL_ROOT_PASSWORD:root}
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  config:
    import: ${SPRING_CONFIG_IMPORT:configserver:http://localhost:8071/}
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    connection-timeout: ${RABBITMQ_CONNECTION_TIMEOUT:10s}
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    stream:
      bindings:
        sendCommunication-out-0:
          destination: send-communication

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
  level:
    com:
      cgnexus:
        accounts: ${LOG_LEVEL_COM_CGNEXUS_ACCOUNTS:DEBUG}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/
info:
  app:
    name: "accounts"
    description: "Accounts Microservice"
    version: "1.0.0"

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState:
          seconds: 10
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration:
          nanos: 100000000 # 100ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        #        ignore-exceptions:
        #          - java.lang.NullPointerException
        retry-exceptions:
          - java.util.concurrent.TimeoutException

  ratelimiter:
    configs:
      default:
        timeoutDuration: 1000ms  # or 1s
        limitRefreshPeriod: 5000ms # or 5s
        limitForPeriod: 1